// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Job_Posting {
  id               Int            @id @default(autoincrement()) @map("posting_id")
  company_name     String
  title            String
  experience_level String
  education_level  String
  location         String
  tech_stack       String
  closing_date     String
  link             String
  Job_Keywords     Job_Keywords[]

  @@unique([company_name, title], name: "companyTitleUnique")
}

model Keywords {
  id           Int            @id @default(autoincrement()) @map("keyword_id")
  keyword      String         @unique
  Job_Keywords Job_Keywords[]
}

model Job_Keywords {
  keyword_id Int
  posting_id Int
  posting    Job_Posting @relation(fields: [posting_id], references: [id])
  keyword    Keywords    @relation(fields: [keyword_id], references: [id])

  @@id([posting_id, keyword_id])
}

model Users {
  user_id      Int           @id @default(autoincrement())
  username     String
  email        String        @unique
  cognito_name String?
  google_name  String?
  submissions  Submissions[]
}

model Tokens {
  token_id      Int    @id @default(autoincrement())
  refresh_token String @db.Text
  access_token  String @db.Text
  email         String
}

model Submissions {
  submission_id  Int      @id @default(autoincrement())
  user_id        Int
  company_name   String
  job_title      String
  site_name      String?
  status         String
  submitted_date DateTime @default(now())
  // User 테이블의 user_id 외래키 설정
  user           Users    @relation(fields: [user_id], references: [user_id])

  @@unique([company_name, user_id], name: "companyNameUnique")
}
